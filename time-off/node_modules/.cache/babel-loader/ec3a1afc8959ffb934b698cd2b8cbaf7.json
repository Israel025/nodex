{"ast":null,"code":"import _defineProperty from \"/home/israel/Documents/Projects/time-off/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/israel/Documents/Projects/time-off/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/israel/Documents/Projects/time-off/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/israel/Documents/Projects/time-off/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/israel/Documents/Projects/time-off/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/israel/Documents/Projects/time-off/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/israel/Documents/Projects/time-off/src/components/pages/SignUp.js\";\nimport React from 'react';\nimport Header from '../common/Header';\nimport Footer from '../common/Footer';\nimport '../../assets/styles/SignUp.css';\nimport Side from '../../assets/images/side2.jpg';\nimport SignupBtn from '../common/SignupBtn';\nimport { Link } from 'react-router-dom';\nimport FormValidator from '../common/FormValidator';\nvar locale = 'en-US' || 'ar' || 'ar-AE' || 'ar-BH' || 'ar-DZ' || 'ar-EG' || 'ar-IQ' || 'ar-JO' || 'ar-KW' || 'ar-LB' || 'ar-LY' || 'ar-MA' || 'ar-QA' || 'ar-QM' || 'ar-SA' || 'ar-SD' || 'ar-SY' || 'ar-TN' || 'ar-YE' || 'bg-BG' || 'cs-CZ' || 'da-DK' || 'de-DE' || 'el-GR' || 'en-AU' || 'en-GB' || 'en-HK' || 'en-IN' || 'en-NZ' || 'en-ZA' || 'en-ZM' || 'es-ES' || 'fr-FR' || 'hu-HU' || 'it-IT' || 'nb-NO' || 'nl-NL' || 'nn-NO' || 'pl-PL' || 'pt-BR' || 'pt-PT' || 'ru-RU' || 'sk-SK' || 'sr-RS' || 'sr-RS@latin' || 'sv-SE' || 'tr-TR' || 'uk-UA';\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignUp, _React$Component);\n\n  function SignUp() {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUp).call(this));\n\n    _this.passwordMatch = function (confirmation, state) {\n      return state.password === confirmation;\n    };\n\n    _this.handleInputChange = function (event) {\n      event.preventDefault();\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      var validation = _this.validator.validate(_this.state);\n\n      _this.setState({\n        validation: validation\n      });\n\n      _this.submitted = true;\n\n      if (validation.isValid) {// handle actual form submission here\n      }\n    };\n\n    _this.validator = new FormValidator([{\n      field: 'signupFname',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Firstname is Required.'\n    }, {\n      field: 'signupFname',\n      method: 'isAlpha',\n      args: [locale],\n      validWhen: true,\n      message: 'Single word of oalphabets.'\n    }, {\n      field: 'signupLname',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Lastname is required.'\n    }, {\n      field: 'signupLname',\n      method: 'isAlpha',\n      args: [locale],\n      validWhen: true,\n      message: 'Enter alphabets only.'\n    }, {\n      field: 'signupEmail',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Email is required.'\n    }, {\n      field: 'signupEmail',\n      method: 'isEmail',\n      validWhen: true,\n      message: 'That is not a valid email.'\n    }, {\n      field: 'signupPass',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Password is required.'\n    }, {\n      field: 'signupPassConfirm',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Retype Password.'\n    }, {\n      field: 'signupPassConfirm',\n      method: _this.passwordMatch,\n      // notice that we are passing a custom function here\n      validWhen: true,\n      message: 'Password do not match.'\n    }, {\n      field: 'signupCoy',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Company name is Required.'\n    }, {\n      field: 'signupCoy',\n      method: 'isAlphanumeric',\n      args: [locale],\n      validWhen: true,\n      message: 'Invalid entry.'\n    }, {\n      field: 'signupPost',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Post is Required.'\n    }, {\n      field: 'signupPost',\n      method: 'isAlpha',\n      args: [locale],\n      validWhen: true,\n      message: 'Alphabets only.'\n    }, {\n      field: 'signupDept',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Company name is Required.'\n    }, {\n      field: 'signupDept',\n      method: 'isAlpha',\n      args: [locale],\n      validWhen: true,\n      message: 'Alphabets only.'\n    }, {\n      field: 'signupManager',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Manager name is Required.'\n    }, {\n      field: 'signupManager',\n      method: 'isAlpha',\n      args: [locale],\n      validWhen: true,\n      message: 'Alphabets only.'\n    }, {\n      field: 'signupPhone',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Phone number is Required.'\n    }, {\n      field: 'signupPhone',\n      method: 'matches',\n      args: [/^\\(?\\d\\d\\d\\)? ?\\d\\d\\d\\d-?\\d\\d\\d\\d$/],\n      // args is an optional array of arguements that will be passed to the validation method\n      validWhen: true,\n      message: 'That is not a valid phone number.'\n    }, {\n      field: 'signupDob',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Date of birth is Required.'\n    }, {\n      field: 'signupCity',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Company name is Required.'\n    }, {\n      field: 'signupCity',\n      method: 'isAlpha',\n      args: [locale],\n      validWhen: true,\n      message: 'Alphabets only.'\n    }, {\n      field: 'signupState',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Company name is Required.'\n    }, {\n      field: 'signupState',\n      method: 'isAlpha',\n      args: [locale],\n      validWhen: true,\n      message: 'Alphabets only.'\n    }]);\n    _this.state = {\n      signupFname: '',\n      signupLname: '',\n      signupEmail: '',\n      signupPass: '',\n      signupPassConfirm: '',\n      signupCoy: '',\n      signupPost: '',\n      signupDept: '',\n      signupManager: '',\n      signupPhone: '',\n      signupDob: '',\n      signupCity: '',\n      signupState: '',\n      validation: _this.validator.valid()\n    };\n    _this.submitted = false;\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var validateSignup = this.submitted ? this.validator.validate(this.state) : this.state.validation;\n      return React.createElement(\"div\", {\n        className: \".mx-auto px-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row index\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/sign-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(SignupBtn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        className: \"index\",\n        alt: \"sideBar\",\n        src: Side,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"needs-validation signupPos\",\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 mb-3 \".concat(validateSignup.signupFname.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupFname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"First name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"signupFname\",\n        name: \"signupFname\",\n        onChange: this.handleInputChange,\n        placeholder: \"First name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, validateSignup.signupFname.message)), React.createElement(\"div\", {\n        className: \"col-md-6 mb-3 \".concat(validateSignup.signupLname.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupLname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Last name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"signupLname\",\n        name: \"signupLname\",\n        onChange: this.handleInputChange,\n        placeholder: \"Last name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, validateSignup.signupLname.message))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4 mb-3 \".concat(validateSignup.signupEmail.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"input-group-text\",\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"@\")), React.createElement(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"signupEmail\",\n        name: \"signupEmail\",\n        onChange: this.handleInputChange,\n        placeholder: \"user@domain.com\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, validateSignup.signupEmail.message))), React.createElement(\"div\", {\n        className: \"col-md-4 mb-3 \".concat(validateSignup.signupPass.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupPass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"signupPass\",\n        name: \"signupPass\",\n        onChange: this.handleInputChange,\n        placeholder: \"password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, validateSignup.signupPass.message)), React.createElement(\"div\", {\n        className: \"col-md-4 mb-3 \".concat(validateSignup.signupPassConfirm.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupPassConfirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"signupPassConfirm\",\n        name: \"signupPassConfirm\",\n        onChange: this.handleInputChange,\n        placeholder: \"re-type password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, validateSignup.signupPassConfirm.message))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 mb-3 \".concat(validateSignup.signupCoy.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupCoy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Organisation\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"signupCoy\",\n        name: \"signupCoy\",\n        onChange: this.handleInputChange,\n        placeholder: \"company name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, validateSignup.signupCoy.message)), React.createElement(\"div\", {\n        className: \"col-md-6 mb-3 \".concat(validateSignup.signupPost.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupPost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"Designation\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"signupPost\",\n        name: \"signupPost\",\n        onChange: this.handleInputChange,\n        placeholder: \"your post in your company\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, validateSignup.signupPost.message))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 mb-3 \".concat(validateSignup.signupDept.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupDept\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Department\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"signupDept\",\n        name: \"signupDept\",\n        onChange: this.handleInputChange,\n        placeholder: \"your department\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, validateSignup.signupDept.message)), React.createElement(\"div\", {\n        className: \"col-md-6 mb-3 \".concat(validateSignup.signupManager.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupManager\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"Manager\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"signupManager\",\n        name: \"signupManager\",\n        onChange: this.handleInputChange,\n        placeholder: \"manager's name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, validateSignup.signupManager.message))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-md-3 \".concat(validateSignup.signupPhone.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupPhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"Telephone Number\"), React.createElement(\"input\", {\n        type: \"phone\",\n        className: \"form-control\",\n        id: \"signupPhone\",\n        name: \"signupPhone\",\n        onChange: this.handleInputChange,\n        placeholder: \"Phone Number\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, validateSignup.signupPhone.message)), React.createElement(\"div\", {\n        className: \"form-group col-md-3 \".concat(validateSignup.signupDob.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupDob\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"Date of Birth\"), React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        name: \"signupDob\",\n        onChange: this.handleInputChange,\n        id: \"signupDob\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, validateSignup.signupDob.message)), React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupGender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(\"select\", {\n        className: \"custom-select\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"Select Gender\"), React.createElement(\"option\", {\n        value: \"male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"Male\"), React.createElement(\"option\", {\n        value: \"female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, \"Female\"), React.createElement(\"option\", {\n        value: \"confused\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, \"Confused\")), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupMarital\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"Marital Status\"), React.createElement(\"select\", {\n        className: \"custom-select\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"Select Status\"), React.createElement(\"option\", {\n        value: \"Single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, \"Single\"), React.createElement(\"option\", {\n        value: \"Married\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, \"Married\"), React.createElement(\"option\", {\n        value: \"not-sure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \"Not Sure\")), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupCountry\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"Country\"), React.createElement(\"select\", {\n        className: \"custom-select\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"Select Country\"), React.createElement(\"option\", {\n        value: \"Nigeria\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"Nigeria\"), React.createElement(\"option\", {\n        value: \"USA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \"USA\"), React.createElement(\"option\", {\n        value: \"Canada\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, \"Canada\"), React.createElement(\"option\", {\n        value: \"France\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"France\"), React.createElement(\"option\", {\n        value: \"Ghana\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, \"Ghana\"), React.createElement(\"option\", {\n        value: \"Australia\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \"Australia\"), React.createElement(\"option\", {\n        value: \"Mexico\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"Mexico\")), React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"Select a country\")), React.createElement(\"div\", {\n        className: \"col-md-5 mb-3 \".concat(validateSignup.signupCity.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"signupCity\",\n        name: \"signupCity\",\n        onChange: this.handleInputChange,\n        placeholder: \"City\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, validateSignup.signupCity.message)), React.createElement(\"div\", {\n        className: \"col-md-4 mb-3 \".concat(validateSignup.signupState.isInValid && 'has-error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"signupState\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"signupState\",\n        name: \"signupState\",\n        onChange: this.handleInputChange,\n        placeholder: \"State\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block SignupError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, validateSignup.signupState.message))), React.createElement(\"div\", {\n        className: \"form-group signupBtnPos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        value: \"\",\n        id: \"invalidCheck\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"invalidCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, \"Agree to terms and conditions\"), React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, \"You must agree before submitting.\"))), React.createElement(\"div\", {\n        className: \"form-row signupBtnPos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleFormSubmit,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, \"Submit form\"))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SignUp;\n}(React.Component);\n\nexport default SignUp;","map":{"version":3,"sources":["/home/israel/Documents/Projects/time-off/src/components/pages/SignUp.js"],"names":["React","Header","Footer","Side","SignupBtn","Link","FormValidator","locale","SignUp","passwordMatch","confirmation","state","password","handleInputChange","event","preventDefault","setState","target","name","value","handleFormSubmit","validation","validator","validate","submitted","isValid","field","method","validWhen","message","args","signupFname","signupLname","signupEmail","signupPass","signupPassConfirm","signupCoy","signupPost","signupDept","signupManager","signupPhone","signupDob","signupCity","signupState","valid","validateSignup","isInValid","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../common/Header';\nimport Footer from '../common/Footer';\nimport '../../assets/styles/SignUp.css';\nimport Side from '../../assets/images/side2.jpg';\nimport SignupBtn from '../common/SignupBtn';\nimport { Link } from 'react-router-dom';\nimport FormValidator from '../common/FormValidator';\n\n\n\nconst locale = 'en-US'||'ar'||'ar-AE'||'ar-BH'||'ar-DZ'||'ar-EG'||'ar-IQ'||'ar-JO'||'ar-KW'||'ar-LB'||'ar-LY'||'ar-MA'||'ar-QA'||'ar-QM'||'ar-SA'||'ar-SD'||'ar-SY'||'ar-TN'||'ar-YE'||'bg-BG'||'cs-CZ'||'da-DK'||'de-DE'||'el-GR'||'en-AU'||'en-GB'||'en-HK'||'en-IN'||'en-NZ'||'en-ZA'||'en-ZM'||'es-ES'||'fr-FR'||'hu-HU'||'it-IT'||'nb-NO'||'nl-NL'||'nn-NO'||'pl-PL'||'pt-BR'||'pt-PT'||'ru-RU'||'sk-SK'||'sr-RS'||'sr-RS@latin'||'sv-SE'||'tr-TR'||'uk-UA';\n\nclass SignUp extends React.Component{\n    \n    constructor(){\n        super();\n\n        this.validator = new FormValidator([\n            { \n                field: 'signupFname', \n                method: 'isEmpty', \n                validWhen: false, \n                message: 'Firstname is Required.' \n            },\n            { \n                field: 'signupFname', \n                method: 'isAlpha',\n                args: [locale], \n                validWhen: true, \n                message: 'Single word of oalphabets.' \n            },\n            { \n                field: 'signupLname', \n                method: 'isEmpty', \n                validWhen: false, \n                message: 'Lastname is required.' \n            },\n            { \n                field: 'signupLname',\n                method: 'isAlpha', \n                args: [locale],\n                validWhen: true, \n                message: 'Enter alphabets only.'\n            },\n            { \n              field: 'signupEmail', \n              method: 'isEmpty', \n              validWhen: false, \n              message: 'Email is required.' \n            },\n            { \n              field: 'signupEmail',\n              method: 'isEmail', \n              validWhen: true, \n              message: 'That is not a valid email.'\n            },\n            { \n                field: 'signupPass', \n                method: 'isEmpty', \n                validWhen: false, \n                message: 'Password is required.'\n            },\n            { \n                field: 'signupPassConfirm', \n                method: 'isEmpty', \n                validWhen: false, \n                message: 'Retype Password.'\n            },\n            { \n                field: 'signupPassConfirm', \n                method: this.passwordMatch,   // notice that we are passing a custom function here\n                validWhen: true, \n                message: 'Password do not match.'\n            },\n            { \n                field: 'signupCoy', \n                method: 'isEmpty', \n                validWhen: false, \n                message: 'Company name is Required.' \n            },\n            { \n                field: 'signupCoy', \n                method: 'isAlphanumeric', \n                args: [locale],\n                validWhen: true, \n                message: 'Invalid entry.' \n            },\n            { \n                field: 'signupPost', \n                method: 'isEmpty', \n                validWhen: false, \n                message: 'Post is Required.' \n            },\n            { \n                field: 'signupPost', \n                method: 'isAlpha', \n                args: [locale],\n                validWhen: true, \n                message: 'Alphabets only.' \n            },\n            { \n                field: 'signupDept', \n                method: 'isEmpty', \n                validWhen: false, \n                message: 'Company name is Required.' \n            },\n            { \n                field: 'signupDept', \n                method: 'isAlpha', \n                args: [locale],\n                validWhen: true, \n                message: 'Alphabets only.' \n            },\n            { \n                field: 'signupManager', \n                method: 'isEmpty', \n                validWhen: false, \n                message: 'Manager name is Required.' \n            },\n            { \n                field: 'signupManager', \n                method: 'isAlpha', \n                args: [locale],\n                validWhen: true, \n                message: 'Alphabets only.' \n            },\n            { \n              field: 'signupPhone', \n              method: 'isEmpty', \n              validWhen: false, \n              message: 'Phone number is Required.'\n            },\n            {\n              field: 'signupPhone', \n              method: 'matches',\n              args: [/^\\(?\\d\\d\\d\\)? ?\\d\\d\\d\\d-?\\d\\d\\d\\d$/], // args is an optional array of arguements that will be passed to the validation method\n              validWhen: true, \n              message: 'That is not a valid phone number.'\n            },\n            { \n                field: 'signupDob', \n                method: 'isEmpty', \n                validWhen: false, \n                message: 'Date of birth is Required.' \n            },\n            { \n                field: 'signupCity', \n                method: 'isEmpty', \n                validWhen: false, \n                message: 'Company name is Required.' \n            },\n            { \n                field: 'signupCity', \n                method: 'isAlpha', \n                args: [locale],\n                validWhen: true, \n                message: 'Alphabets only.' \n            },\n            { \n                field: 'signupState', \n                method: 'isEmpty', \n                validWhen: false, \n                message: 'Company name is Required.' \n            },\n            { \n                field: 'signupState', \n                method: 'isAlpha', \n                args: [locale],\n                validWhen: true, \n                message: 'Alphabets only.' \n            },\n            \n          ]);\n      \n          this.state = {\n              signupFname: '',\n              signupLname: '',\n              signupEmail: '',\n              signupPass: '',\n              signupPassConfirm: '',\n              signupCoy: '',\n              signupPost: '',\n              signupDept: '',\n              signupManager: '',\n              signupPhone: '',\n              signupDob: '',\n              signupCity: '',\n              signupState: '',\n              validation: this.validator.valid(),\n          }\n      \n          this.submitted = false;\n        }\n      \n        passwordMatch = (confirmation, state) => (state.password === confirmation)\n      \n        handleInputChange = event => {\n            event.preventDefault();\n\n            this.setState({[event.target.name]: event.target.value,});  \n        }\n\n        handleFormSubmit = event => {\n            event.preventDefault();\n    \n            const validation = this.validator.validate(this.state);\n            this.setState({ validation });\n            this.submitted = true;\n    \n            if (validation.isValid) {\n            // handle actual form submission here\n            }\n        }\n\n    render() {\n\n        let validateSignup = this.submitted ? this.validator.validate(this.state) : this.state.validation;\n\n      return (\n        <div className=\".mx-auto px-0\">\n\n            <div>\n                <Header/>\n            </div>\n            <div className=\"row index\">\n                <div className=\"col-md-4\">\n                    <Link to=\"/sign-up\">\n                        <SignupBtn/>\n                    </Link>                    \n                    <img className=\"index\" alt=\"sideBar\" src={Side}/>\n                </div>\n                <div className=\"col-md-8\">\n                    <form className=\"needs-validation signupPos\" noValidate>\n                        <div className=\"form-row\">\n\n                            <div className={`col-md-6 mb-3 ${validateSignup.signupFname.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupFname\">First name</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"signupFname\" \n                                    name=\"signupFname\"\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"First name\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupFname.message}</span>\n                            </div>\n\n                            <div className={`col-md-6 mb-3 ${validateSignup.signupLname.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupLname\">Last name</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"signupLname\" \n                                    name=\"signupLname\"\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Last name\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupLname.message}</span>\n                            </div>\n\n                        </div>\n\n                        <div className=\"form-row\">\n\n                            <div className={`col-md-4 mb-3 ${validateSignup.signupEmail.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupEmail\">Email Address</label>\n                                <div className=\"input-group\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\" id=\"inputGroupPrepend\">@</span>\n                                    </div>\n                                    <input type=\"email\" \n                                        className=\"form-control\" \n                                        id=\"signupEmail\" \n                                        name=\"signupEmail\"\n                                        onChange={this.handleInputChange}\n                                        placeholder=\"user@domain.com\" required\n                                    />\n                                    <span className=\"help-block SignupError\">{validateSignup.signupEmail.message}</span>\n                                </div>\n                            </div>\n\n                            <div className={`col-md-4 mb-3 ${validateSignup.signupPass.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupPass\">Password</label>\n                                <input type=\"password\" \n                                    className=\"form-control\" \n                                    id=\"signupPass\" \n                                    name=\"signupPass\" \n                                    onChange={this.handleInputChange}\n                                    placeholder=\"password\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupPass.message}</span>\n                            </div>\n\n                            <div className={`col-md-4 mb-3 ${validateSignup.signupPassConfirm.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupPassConfirm\">Confirm Password</label>\n                                <input type=\"password\" \n                                    className=\"form-control\" \n                                    id=\"signupPassConfirm\" \n                                    name=\"signupPassConfirm\" \n                                    onChange={this.handleInputChange}\n                                    placeholder=\"re-type password\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupPassConfirm.message}</span>\n                            </div>\n                            \n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className={`col-md-6 mb-3 ${validateSignup.signupCoy.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupCoy\">Organisation</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"signupCoy\" \n                                    name=\"signupCoy\"\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"company name\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupCoy.message}</span>\n                            </div>\n\n                            <div className={`col-md-6 mb-3 ${validateSignup.signupPost.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupPost\">Designation</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"signupPost\" \n                                    name=\"signupPost\"\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"your post in your company\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupPost.message}</span>\n                            </div>                            \n                        </div>\n                        <div className=\"form-row\">\n                            <div className={`col-md-6 mb-3 ${validateSignup.signupDept.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupDept\">Department</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"signupDept\" \n                                    name=\"signupDept\"\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"your department\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupDept.message}</span>\n                            </div>\n\n                            <div className={`col-md-6 mb-3 ${validateSignup.signupManager.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupManager\">Manager</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"signupManager\" \n                                    name=\"signupManager\"\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"manager's name\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupManager.message}</span>\n                            </div>                            \n                        </div>\n                        \n                        <div className=\"form-row\">\n\n                            <div className={`form-group col-md-3 ${validateSignup.signupPhone.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupPhone\">Telephone Number</label>\n                                <input type=\"phone\" \n                                    className=\"form-control\" \n                                    id=\"signupPhone\" \n                                    name=\"signupPhone\"\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Phone Number\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupPhone.message}</span>\n                            </div>\n\n                            <div className={`form-group col-md-3 ${validateSignup.signupDob.isInValid && 'has-error'}`}>                    \n                                <label htmlFor=\"signupDob\">Date of Birth</label>\n                                <input type=\"date\" \n                                    className=\"form-control\"\n                                    name=\"signupDob\" \n                                    onChange={this.handleInputChange}\n                                    id=\"signupDob\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupDob.message}</span>\n                            </div>\n\n                            <div className=\"form-group col-md-3\">\n                                <label htmlFor=\"signupGender\">Gender</label>\n                                <select className=\"custom-select\" required>\n                                    <option value=\"\">Select Gender</option>\n                                    <option value=\"male\">Male</option>\n                                    <option value=\"female\">Female</option>\n                                    <option value=\"confused\">Confused</option>\n                                </select>\n                                <span className=\"help-block SignupError\"></span>\n                            </div>\n\n                            <div className=\"form-group col-md-3\">\n                                <label htmlFor=\"signupMarital\">Marital Status</label>\n                                <select className=\"custom-select\" required>\n                                    <option value=\"\">Select Status</option>\n                                    <option value=\"Single\">Single</option>\n                                    <option value=\"Married\">Married</option>\n                                    <option value=\"not-sure\">Not Sure</option>\n                                </select>\n                                <span className=\"help-block SignupError\"></span>\n                            </div>\n\n                        </div>                        \n\n                        <div className=\"form-row\">\n\n                            <div className=\"form-group col-md-3 mb-3\">\n                                <label htmlFor=\"signupCountry\">Country</label>\n                                <select className=\"custom-select\" required>\n                                    <option value=\"\">Select Country</option>\n                                    <option value=\"Nigeria\">Nigeria</option>\n                                    <option value=\"USA\">USA</option>\n                                    <option value=\"Canada\">Canada</option>\n                                    <option value=\"France\">France</option>\n                                    <option value=\"Ghana\">Ghana</option>\n                                    <option value=\"Australia\">Australia</option>\n                                    <option value=\"Mexico\">Mexico</option>\n                                </select>\n                                <div className=\"invalid-feedback\">Select a country</div>\n                            </div>\n\n\n                            <div className={`col-md-5 mb-3 ${validateSignup.signupCity.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupCity\">City</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"signupCity\"\n                                    name=\"signupCity\" \n                                    onChange={this.handleInputChange}\n                                    placeholder=\"City\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupCity.message}</span>\n                            </div>\n\n                            <div className={`col-md-4 mb-3 ${validateSignup.signupState.isInValid && 'has-error'}`}>\n                                <label htmlFor=\"signupState\">State</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"signupState\" \n                                    name=\"signupState\"\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"State\" required\n                                />\n                                <span className=\"help-block SignupError\">{validateSignup.signupState.message}</span>\n                            </div>\n                        \n                        </div>\n\n                        <div className=\"form-group signupBtnPos\">\n                            <div className=\"form-check\">\n                                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required/>\n                                <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\n                                    Agree to terms and conditions\n                                </label>\n                                <div className=\"invalid-feedback\">\n                                    You must agree before submitting.\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-row signupBtnPos\">\n                            <button type=\"submit\" \n                                onClick={this.handleFormSubmit} \n                                className=\"btn btn-primary\">Submit form</button>           \n                        </div>\n                        \n                    </form>\n                </div>            \n            </div>\n            <div>\n                <Footer/>\n            </div>\n          \n        </div>\n      );\n    }\n}\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}